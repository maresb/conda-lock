[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "conda_lock"
description = "Lockfiles for conda"
authors = [
    { name = "Marius van Niekerk", email = "marius.v.niekerk@gmail.com" },
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
license-files = { paths = ["LICENSE"] }
dependencies = [
    "click >=8.0",
    "click-default-group",
    "ensureconda >=1.3",
    "gitpython >=3.1.30",
    "jinja2",
    "pydantic >=1.8.1",
    "pyyaml >= 5.1",
    "ruamel.yaml",
    "typing-extensions",
    "toolz >=0.12.0,<1.0.0",
    # BEGIN VENDORED POETRY DEPENDENCIES
        # poetry:
        "build >=0.10.0,<0.11.0",
        # poetry:
        "cachecontrol[filecache] >=0.12.9,<0.13.0",
        # cleo, poetry:
        "crashtest >=0.4.1,<0.5.0",
        # poetry:
        "dulwich >=0.21.2,<0.22.0",
        # poetry, conda-lock:
        "filelock >=3.8.0,<4.0.0",
        # poetry:
        "html5lib >=1.0,<2.0",
        # poetry:
        "importlib-metadata >=4.4; python_version <= '3.9'",
        # poetry:
        "installer >=0.7.0,<0.8.0",
        # poetry:
        "jsonschema >=4.10.0,<5.0.0",
        # poetry:
        "keyring >=23.9.0,<24.0.0",
        # poetry:
        "lockfile >=0.12.2,<0.13.0",
        # poetry:
        "packaging >=20.4",
        # poetry:
        "pexpect >=4.7.0,<5.0.0",
        # poetry:
        "pkginfo >=1.9.4,<2.0.0",
        # poetry:
        "platformdirs >=3.0.0,<4.0.0",
        # poetry:
        "poetry-plugin-export >=1.4.0,<2.0.0",
        # poetry:
        "pyproject-hooks >=1.0.0,<2.0.0",
        # cleo:
        "rapidfuzz >=2.2.0,<3.0.0",
        # poetry, conda-lock:
        "requests >=2.18,<3.0",
        # poetry:
        "requests-toolbelt >=0.9.1,<2",
        # poetry:
        "shellingham >=1.5,<2.0",
        # poetry, conda-lock:
        "tomli >=2.0.1,<3.0.0; python_version <= '3.10'",
        # poetry:
        "tomlkit >=0.11.4,<1.0.0",
        # poetry:
        "trove-classifiers >=2022.5.19",
        # poetry:
        "urllib3 >=1.26.0,<2.0.0",
        # poetry:
        "virtualenv >=20.22.0,<21.0.0",
        # poetry:
        "xattr >=0.10.0,<0.11.0",
    # END VENDORED POETRY DEPENDENCIES
]

[project.scripts]
conda-lock = "conda_lock:main"

[project.urls]
Homepage = "https://github.com/conda/conda-lock"
Repository = "https://github.com/conda/conda-lock"
Documentation = "https://conda.github.io/conda-lock/"
"Issue Tracker" = "https://github.com/conda/conda-lock/issues"
"Conda-Forge Feedstock" = "https://github.com/conda-forge/conda-lock-feedstock"
"Anaconda.org" = "https://anaconda.org/conda-forge/conda-lock"

[tool]

[tool.check-manifest]
ignore = [
    "*.yml",
    ".coveragerc",
    "Makefile",
    "docs",
    "docs/*",
    "*.enc",
    "tests",
    "tests/*",
]

[tool.coverage.run]
omit = [
    "*/conda_lock/_vendor/*",
]
source = [
    "conda_lock/*",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build]
exclude = [
    "tests",
]

[tool.isort]
atomic = true
force_grid_wrap = 0
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
known_first_party = "attr"

[tool.pytest.ini_options]
addopts = "-vrsx -n auto"
flake8-max-line-length = 105
flake8-ignore = ["docs/* ALL", "conda_lock/_version.py ALL"]
filterwarnings = "ignore::DeprecationWarning"

[tool.vendoring]
destination = "conda_lock/_vendor"
namespace = "conda_lock._vendor"
requirements = "conda_lock/_vendor/vendor.txt"
protected-files = ["__init__.py", "README.md", "LICENSES.md", "vendor.txt"]
patches-dir = "conda_lock/scripts/vendor_poetry/patches"

[tool.vendoring.transformations]
drop = [
    "bin",
    "conda_env",
    # From cleo we only need cleo.io.io_mixin
    '^cleo\/(?!io$|io\/io_mixin\.py$).*$',
    "poetry/console",
    "poetry/publishing",
    "poetry/utils/shell.py",
    "poetry/core/_vendor/six.py",
    "poetry/core/_vendor/six.LICENSE",
]
substitute = [
    # simple substitution patch to fix conda.exports
    { match = 'conda\.base\.context', replace = 'conda_lock.vendor.conda.base.context' },
    { match = '"pypoetry"', replace = '"pypoetry-conda-lock"' }
]

[tool.conda-lock]
channels = ["conda-forge", "nodefaults"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64", "osx-arm64", "linux-aarch64"]

[tool.conda-lock.dependencies]
# This is necessary to pull in the lockfile/filelock dependency
# since we don't handle the optional dependency.
cachecontrol-with-filecache = ">=0.12.9"
